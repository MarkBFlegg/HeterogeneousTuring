function [f1u,f1v,f2u,f2v]=njac_gm(p,u) % Jacobian for Schnakenberg
%u1=u(1:p.np); u2=u(p.np+1:2*p.np); 
par=u(p.nu+1:end); u1=u(1:p.nu/2); u2=u(p.nu/2+1:p.nu);

c_heterogeneity = p.myParams.c_heterogeneity;
a_heterogeneity = p.myParams.a_heterogeneity;

theta = par(1);
a = par(4);
c = par(5);
p_param = par(6);
gamma = par(2);

x = getpte(p)';

f1u = gamma * ( ...
    - c * c_heterogeneity(theta, x) ...
    - (2 * p_param * u1.^3) ./ ( (1 + p_param * u1.^2).^2 .* u2) ...
    + (2 * u1) ./ ((1 + p_param * u1.^2) .* u2) ...
);
f1v = gamma * ( ...
    - u1.^2 ./ ((1 + p_param * u1.^2) .* u2.^2) ...
);
f2u = gamma * ( ...
    2 * u1 ...
);
f2v = gamma * ( ...
    - a * a_heterogeneity(theta, x) ...
);